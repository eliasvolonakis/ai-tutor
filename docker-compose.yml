services:
  postgres:
    image: "${POSTGRES_IMAGE}"
    container_name: "${POSTGRES_CONTAINER}"
    command: |
      bash -c "
      apt-get update && 
      apt-get install -y postgresql-17-pgvector && 
      docker-entrypoint.sh postgres"
    environment:
      POSTGRES_DB: "${POSTGRES_DB}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - ai_tutor_postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: ai-tutor-dev
    ports:
      - "${DEV_PORT}:4141"
    volumes:
      - .:/app
      - /app/node_modules
    env_file:
      - .env
    environment:
      - NODE_ENV=${NODE_ENV}
      - DATABASE_URL=${DATABASE_URL}
      - PGHOST=postgres
      - PGPORT=${POSTGRES_PORT}
      - PGDATABASE=${POSTGRES_DB}
      - PGUSER=${POSTGRES_USER}
      - PGPASSWORD=${POSTGRES_PASSWORD}
    depends_on:
      postgres:
        condition: service_healthy
    command: bun run dev

  prod:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: ai-tutor-prod
    ports:
      - "${PROD_PORT}:4141"
    env_file:
      - .env
    environment:
      - NODE_ENV=production
      - DATABASE_URL=${DATABASE_URL}
      - PGHOST=postgres
      - PGPORT=${POSTGRES_PORT}
      - PGDATABASE=${POSTGRES_DB}
      - PGUSER=${POSTGRES_USER}
      - PGPASSWORD=${POSTGRES_PASSWORD}
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  ai_tutor_postgres_data:


